name: Register validator

on:
  issues:
    types: [ labeled, unlabeled ]

jobs:
  resolve-context:
    if: |
      !github.event.issue.pull_request &&
      contains(github.event.issue.labels.*.name, 'register-validator') &&
      !contains(github.event.issue.labels.*.name, 'invalid')
    runs-on: ubuntu-22.04
    outputs:
      network: ${{ fromJson(steps.parse-issue.outputs.jsonString).network }}
      gentx: ${{ steps.extract-gentx.outputs.gentx }}
      register-config: ${{ steps.register-config.outputs.config }}
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Setup jq
        run: |
          sudo apt install -y jq

      - name: Parse issue form content
        id: parse-issue
        uses: stefanbuck/github-issue-parser@v2
        with:
          template-path: .github/ISSUE_TEMPLATE/register-validator.yml
      
      - name: Extract gentx
        id: extract-gentx
        env:
          GENTX_MD: ${{ fromJson(steps.parse-issue.outputs.jsonString).gentx }}
        run: |
          set -e
          gentx=$(echo "$GENTX_MD" | tail -n +2 | sed '$d' | jq -c '.')
          echo "::set-output name=gentx::$gentx"

      - name: Get network register config
        id: register-config
        run: |
          set -eo pipefail
          config=$(cat chains/${{ fromJson(steps.parse-issue.outputs.jsonString).network }}/register-config.json | jq -c '.')
          echo "::set-output name=config::$config"

  check:
    needs:
      - resolve-context
    runs-on: ubuntu-22.04
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Setup jq
        run: |
          sudo apt install -y jq

      - name: Check gentx
        id: check-gentx
        env:
          GENTX: ${{ needs.resolve-context.outputs.gentx }}
        run: |
          set -e
          echo "üßê Checking gentx"
          startTime=$(date --date="${{ fromJson(needs.resolve-context.outputs.register-config).start-date }}" +%s)
          endTime=$(date --date="${{ fromJson(needs.resolve-context.outputs.register-config).end-date }}" +%s)
          now=$(date +%s)

          if [[ $now < $startTime ]]; then
              echo '::set-output name=error::Register process is not open yet for this network.'
              exit 1
          elif [[ $now > $endTime ]]; then
              echo '::set-output name=error::Register process is closed for this network.'
              exit 1
          fi

          delegationAmount=$(echo "$GENTX" | jq -r '.body.messages[0].value.amount')
          delegationDenom=$(echo "$GENTX" | jq -r '.body.messages[0].value.denom')
          if [ "${{ fromJson(needs.resolve-context.outputs.register-config).delegation.amount }}" != "$delegationAmount" ]; then
              echo '::set-output name=error::Invalid delegation amount.'
              exit 1
          elif [ "${{ fromJson(needs.resolve-context.outputs.register-config).delegation.denom }}" != "$delegationDenom" ]; then
              echo '::set-output name=error::Invalid delegation denom.'
              exit 1
          fi
          echo "üëç gentx seems right."

      - name: Add failure comment
        if: ${{ failure() }}
        uses: peter-evans/create-or-update-comment@v2
        with:
          token: ${{ secrets.OKP4_TOKEN }}
          issue-number: ${{ github.event.issue.number }}
          body: |
            üò¢ I couldn't process your request: `${{ steps.check-gentx.outputs.error }}`
